include:
  - template: Code-Quality.gitlab-ci.yml

stages:
  - test
  - build
  - verifybuild
  - publish

code_quality:
  tags:
    - docker

.test_template: &test_template
  stage: test
  image: python:3.9-slim
  before_script:
    - apt-get update && apt-get install -y git
    - pip install -U pip
    - pip install -U -r requirements_dev.txt
  tags:
    - kubernetes

coverage:
  <<: *test_template
  script:
    - tox -e coverage
  coverage: '/TOTAL\s+\d+\s+\d+\s+\d+\s+\d+\s+([\d\.]+)\%/'
  artifacts:
    expire_in: 2 weeks
    name: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"
    paths:
      - htmlcov/
    reports:
      cobertura: coverage.xml
      junit: junit.xml

flake8:
  <<: *test_template
  script:
    - tox -e flake8
  artifacts:
    reports:
      codequality: gl-code-quality-report.json

twine-check:
  <<: *test_template
  script:
    - tox -e twine-check

python 3.6:
  <<: *test_template
  image: python:3.6-slim
  script:
    - tox -e py36

python 3.7:
  <<: *test_template
  image: python:3.7-slim
  script:
    - tox -e py37

python 3.8:
  <<: *test_template
  image: python:3.8-slim
  script:
    - tox -e py38

python 3.9:
  <<: *test_template
  image: python:3.9-slim
  script:
    - tox -e py39

.build_docker_image_template: &build_docker_image_template
  stage: build
  tags:
    - kubernetes
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    PY_VERSION: "3-slim"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "trigger")
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
      variables:
        DESTINATION: ${CI_REGISTRY_IMAGE}:${PY_VERSION}-${CI_COMMIT_REF_SLUG}
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      variables:
        DESTINATION: ${CI_REGISTRY_IMAGE}/tag:${CI_COMMIT_TAG}-${PY_VERSION}
    - if: '$CI_PIPELINE_SOURCE == "push"'
      variables:
        DESTINATION: ${CI_REGISTRY_IMAGE}/review:${CI_COMMIT_REF_SLUG}-${PY_VERSION}
  script:
    - echo "Building image to " $DESTINATION
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination ${DESTINATION} --build-arg PY_VERSION=${PY_VERSION}

image python 3:
  <<: *build_docker_image_template
  needs: [coverage]

image python 3.6:
  <<: *build_docker_image_template
  needs: [python 3.6]
  variables:
    PY_VERSION: "3.6-slim"

image python 3.7:
  <<: *build_docker_image_template
  needs: [python 3.7]
  variables:
    PY_VERSION: "3.7-slim"

image python 3.8:
  <<: *build_docker_image_template
  needs: [python 3.8]
  variables:
    PY_VERSION: "3.8-slim"

image python 3.9:
  <<: *build_docker_image_template
  needs: [python 3.9]
  variables:
    PY_VERSION: "3.9-slim"

.verify_docker_build_template: &verify_docker_build_template
  stage: verifybuild
  variables:
    PY_VERSION: "3-slim"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "trigger")
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
      variables:
        DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}:${PY_VERSION}-${CI_COMMIT_REF_SLUG}
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
      variables:
        DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}/tag:${CI_COMMIT_TAG}-${PY_VERSION}
    - if: '$CI_PIPELINE_SOURCE == "push"'
      variables:
        DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}/review:${CI_COMMIT_REF_SLUG}-${PY_VERSION}
  image: $DOCKER_IMAGE
  tags:
    - kubernetes
  script:
    - echo "Using Docker image " $DOCKER_IMAGE
    - python -V
    - askanna --version
    - askanna
    - askanna-run-utils --version
    - askanna-run-utils

verify image python 3:
  <<: *verify_docker_build_template
  needs: [image python 3]

verify image python 3.6:
  <<: *verify_docker_build_template
  needs: [image python 3.6]
  variables:
    PY_VERSION: "3.6-slim"

verify image python 3.7:
  <<: *verify_docker_build_template
  needs: [image python 3.7]
  variables:
    PY_VERSION: "3.7-slim"

verify image python 3.8:
  <<: *verify_docker_build_template
  needs: [image python 3.8]
  variables:
    PY_VERSION: "3.8-slim"

verify image python 3.9:
  <<: *verify_docker_build_template
  needs: [image python 3.9]
  variables:
    PY_VERSION: "3.9-slim"

publish_to_pypi:
  stage: publish
  image: python:3-slim
  tags:
    - kubernetes
  before_script:
    - echo $PYPIRC | base64 -d > ~/.pypirc
    - pip install -U pip wheel twine
  script:
    - python3 setup.py sdist bdist_wheel
    - twine upload --verbose --non-interactive --config-file ~/.pypirc -r pypi dist/*
  only:
    refs:
      - master

publish_to_testpypi:
  stage: publish
  image: python:3-slim
  tags:
    - kubernetes
  allow_failure: true
  before_script:
    - echo $PYPITESTRC | base64 -d > ~/.pypirc
    - pip install -U pip wheel twine
  script:
    - python3 setup.py sdist bdist_wheel
    - twine upload --verbose --non-interactive --config-file ~/.pypirc -r testpypi dist/*
  when: manual
  except:
    refs:
      - master

publish_to_docker:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  tags:
    - docker
  allow_failure: true
  before_script:
    - echo "$DOCKER_TOKEN" | docker login --username $DOCKER_USER --password-stdin
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
  script:
    - docker pull gitlab.askanna.io:4567/askanna/askanna-cli --all-tags
    - docker tag gitlab.askanna.io:4567/askanna/askanna-cli:3-slim-master askanna/python:3
    - docker tag gitlab.askanna.io:4567/askanna/askanna-cli:3-slim-master askanna/python:latest
    - docker tag gitlab.askanna.io:4567/askanna/askanna-cli:3.6-slim-master askanna/python:3.6
    - docker tag gitlab.askanna.io:4567/askanna/askanna-cli:3.7-slim-master askanna/python:3.7
    - docker tag gitlab.askanna.io:4567/askanna/askanna-cli:3.8-slim-master askanna/python:3.8
    - docker tag gitlab.askanna.io:4567/askanna/askanna-cli:3.9-slim-master askanna/python:3.9
    - docker push askanna/python:latest
    - docker push askanna/python:3
    - docker push askanna/python:3.6
    - docker push askanna/python:3.7
    - docker push askanna/python:3.8
    - docker push askanna/python:3.9
  after_script:
    - docker logout
  only:
    refs:
      - master
